//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(travel_agency.DAL.travelContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets16c7ee17d99d0332bdbcfa851a647f25655905f63e74f58b0e7f7242ff4375bd))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySets16c7ee17d99d0332bdbcfa851a647f25655905f63e74f58b0e7f7242ff4375bd : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "16c7ee17d99d0332bdbcfa851a647f25655905f63e74f58b0e7f7242ff4375bd"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.Offer")
            {
                return GetView0();
            }

            if (extentName == "CodeFirstDatabase.Orders")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.Profile")
            {
                return GetView2();
            }

            if (extentName == "CodeFirstDatabase.Participant")
            {
                return GetView3();
            }

            if (extentName == "travelContext.Offers")
            {
                return GetView4();
            }

            if (extentName == "travelContext.Orders")
            {
                return GetView5();
            }

            if (extentName == "travelContext.Profile_orders")
            {
                return GetView6();
            }

            if (extentName == "travelContext.Profiles")
            {
                return GetView7();
            }

            if (extentName == "travelContext.Participants")
            {
                return GetView8();
            }

            if (extentName == "CodeFirstDatabase.Topicality")
            {
                return GetView9();
            }

            if (extentName == "travelContext.Topicalities")
            {
                return GetView10();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Offer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Offer
        [CodeFirstDatabaseSchema.Offer](T1.Offer_ID, T1.Offer_NameOffer, T1.Offer_TravelDestination, T1.Offer_lengthOfStay, T1.Offer_tripCategory, T1.Offer_TripDescription, T1.Offer_NumberOfFreePlaces, T1.Offer_NumberOfOccupiedPlaces, T1.Offer_PricePerPerson, T1.Offer_startDate, T1.Offer_EndDate, T1.Offer_transport, T1.Offer_accommodation, T1.Offer_AllInclusive, T1.Offer_Image)
    FROM (
        SELECT 
            T.ID AS Offer_ID, 
            T.NameOffer AS Offer_NameOffer, 
            T.TravelDestination AS Offer_TravelDestination, 
            CAST(T.lengthOfStay AS [Edm.Int32]) AS Offer_lengthOfStay, 
            CAST(T.tripCategory AS [Edm.Int32]) AS Offer_tripCategory, 
            T.TripDescription AS Offer_TripDescription, 
            T.NumberOfFreePlaces AS Offer_NumberOfFreePlaces, 
            T.NumberOfOccupiedPlaces AS Offer_NumberOfOccupiedPlaces, 
            T.PricePerPerson AS Offer_PricePerPerson, 
            T.startDate AS Offer_startDate, 
            T.EndDate AS Offer_EndDate, 
            T.transport AS Offer_transport, 
            T.accommodation AS Offer_accommodation, 
            T.AllInclusive AS Offer_AllInclusive, 
            T.Image AS Offer_Image, 
            True AS _from0
        FROM travelContext.Offers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Orders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Orders
        [CodeFirstDatabaseSchema.Orders](T3.Orders_ID, T3.Orders_UserName, T3.Orders_OfferID, T3.Orders_NumberOfChildern, T3.Orders_NumberOfAdult, T3.Orders_status, T3.Orders_TransactionDate, T3.Orders_costs, T3.[Orders.profile_ID])
    FROM (
        SELECT T1.Orders_ID, T1.Orders_UserName, T1.Orders_OfferID, T1.Orders_NumberOfChildern, T1.Orders_NumberOfAdult, T1.Orders_status, T1.Orders_TransactionDate, T1.Orders_costs, T2.[Orders.profile_ID], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.ID AS Orders_ID, 
                T.UserName AS Orders_UserName, 
                T.OfferID AS Orders_OfferID, 
                T.NumberOfChildern AS Orders_NumberOfChildern, 
                T.NumberOfAdult AS Orders_NumberOfAdult, 
                CAST(T.status AS [Edm.Int32]) AS Orders_status, 
                T.TransactionDate AS Orders_TransactionDate, 
                T.costs AS Orders_costs, 
                True AS _from0
            FROM travelContext.Orders AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.Profile_orders_Target).ID AS Orders_ID, 
                Key(T.Profile_orders_Source).ID AS [Orders.profile_ID], 
                True AS _from1
            FROM travelContext.Profile_orders AS T) AS T2
            ON T1.Orders_ID = T2.Orders_ID
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Profile.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Profile
        [CodeFirstDatabaseSchema.Profile](T1.Profile_ID, T1.Profile_UserName, T1.Profile_Password, T1.Profile_Name, T1.Profile_Surname, T1.Profile_City)
    FROM (
        SELECT 
            T.ID AS Profile_ID, 
            T.UserName AS Profile_UserName, 
            T.Password AS Profile_Password, 
            T.Name AS Profile_Name, 
            T.Surname AS Profile_Surname, 
            T.City AS Profile_City, 
            True AS _from0
        FROM travelContext.Profiles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Participant.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Participant
        [CodeFirstDatabaseSchema.Participant](T1.Participant_ID, T1.Participant_OfferID, T1.Participant_Name, T1.Participant_Surname, T1.Participant_City, T1.Participant_Street, T1.Participant_NumberOfHouse, T1.Participant_Age)
    FROM (
        SELECT 
            T.ID AS Participant_ID, 
            T.OfferID AS Participant_OfferID, 
            T.Name AS Participant_Name, 
            T.Surname AS Participant_Surname, 
            T.City AS Participant_City, 
            T.Street AS Participant_Street, 
            T.NumberOfHouse AS Participant_NumberOfHouse, 
            T.Age AS Participant_Age, 
            True AS _from0
        FROM travelContext.Participants AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for travelContext.Offers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Offers
        [travel_agency.DAL.Offer](T1.Offer_ID, T1.Offer_NameOffer, T1.Offer_TravelDestination, T1.Offer_lengthOfStay, T1.Offer_tripCategory, T1.Offer_TripDescription, T1.Offer_NumberOfFreePlaces, T1.Offer_NumberOfOccupiedPlaces, T1.Offer_PricePerPerson, T1.Offer_startDate, T1.Offer_EndDate, T1.Offer_transport, T1.Offer_accommodation, T1.Offer_AllInclusive, T1.Offer_Image)
    FROM (
        SELECT 
            T.ID AS Offer_ID, 
            T.NameOffer AS Offer_NameOffer, 
            T.TravelDestination AS Offer_TravelDestination, 
            CAST(T.lengthOfStay AS [travel_agency.DAL.LengthOfStay]) AS Offer_lengthOfStay, 
            CAST(T.tripCategory AS [travel_agency.DAL.TripCategory]) AS Offer_tripCategory, 
            T.TripDescription AS Offer_TripDescription, 
            T.NumberOfFreePlaces AS Offer_NumberOfFreePlaces, 
            T.NumberOfOccupiedPlaces AS Offer_NumberOfOccupiedPlaces, 
            T.PricePerPerson AS Offer_PricePerPerson, 
            T.startDate AS Offer_startDate, 
            T.EndDate AS Offer_EndDate, 
            T.transport AS Offer_transport, 
            T.accommodation AS Offer_accommodation, 
            T.AllInclusive AS Offer_AllInclusive, 
            T.Image AS Offer_Image, 
            True AS _from0
        FROM CodeFirstDatabase.Offer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for travelContext.Orders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Orders
        [travel_agency.DAL.Orders](T1.Orders_ID, T1.Orders_UserName, T1.Orders_OfferID, T1.Orders_NumberOfChildern, T1.Orders_NumberOfAdult, T1.Orders_status, T1.Orders_TransactionDate, T1.Orders_costs) WITH 
        RELATIONSHIP(CREATEREF(travelContext.Profiles, ROW(T1.[Profile_orders.Profile_orders_Source.ID]),[travel_agency.DAL.Profile]),[travel_agency.DAL.Profile_orders],Profile_orders_Target,Profile_orders_Source) 
    FROM (
        SELECT 
            T.ID AS Orders_ID, 
            T.UserName AS Orders_UserName, 
            T.OfferID AS Orders_OfferID, 
            T.NumberOfChildern AS Orders_NumberOfChildern, 
            T.NumberOfAdult AS Orders_NumberOfAdult, 
            CAST(T.status AS [travel_agency.DAL.Status]) AS Orders_status, 
            T.TransactionDate AS Orders_TransactionDate, 
            T.costs AS Orders_costs, 
            True AS _from0, 
            T.profile_ID AS [Profile_orders.Profile_orders_Source.ID]
        FROM CodeFirstDatabase.Orders AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for travelContext.Profile_orders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Profile_orders
        [travel_agency.DAL.Profile_orders](T3.[Profile_orders.Profile_orders_Source], T3.[Profile_orders.Profile_orders_Target])
    FROM (
        SELECT -- Constructing Profile_orders_Source
            CreateRef(travelContext.Profiles, row(T2.[Profile_orders.Profile_orders_Source.ID]), [travel_agency.DAL.Profile]) AS [Profile_orders.Profile_orders_Source], 
            T2.[Profile_orders.Profile_orders_Target]
        FROM (
            SELECT -- Constructing Profile_orders_Target
                T1.[Profile_orders.Profile_orders_Source.ID], 
                CreateRef(travelContext.Orders, row(T1.[Profile_orders.Profile_orders_Target.ID]), [travel_agency.DAL.Orders]) AS [Profile_orders.Profile_orders_Target]
            FROM (
                SELECT 
                    T.profile_ID AS [Profile_orders.Profile_orders_Source.ID], 
                    T.ID AS [Profile_orders.Profile_orders_Target.ID], 
                    True AS _from0
                FROM CodeFirstDatabase.Orders AS T
                WHERE T.profile_ID IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for travelContext.Profiles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Profiles
        [travel_agency.DAL.Profile](T1.Profile_ID, T1.Profile_UserName, T1.Profile_Password, T1.Profile_Name, T1.Profile_Surname, T1.Profile_City)
    FROM (
        SELECT 
            T.ID AS Profile_ID, 
            T.UserName AS Profile_UserName, 
            T.Password AS Profile_Password, 
            T.Name AS Profile_Name, 
            T.Surname AS Profile_Surname, 
            T.City AS Profile_City, 
            True AS _from0
        FROM CodeFirstDatabase.Profile AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for travelContext.Participants.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Participants
        [travel_agency.DAL.Participant](T1.Participant_ID, T1.Participant_OfferID, T1.Participant_Name, T1.Participant_Surname, T1.Participant_City, T1.Participant_Street, T1.Participant_NumberOfHouse, T1.Participant_Age)
    FROM (
        SELECT 
            T.ID AS Participant_ID, 
            T.OfferID AS Participant_OfferID, 
            T.Name AS Participant_Name, 
            T.Surname AS Participant_Surname, 
            T.City AS Participant_City, 
            T.Street AS Participant_Street, 
            T.NumberOfHouse AS Participant_NumberOfHouse, 
            T.Age AS Participant_Age, 
            True AS _from0
        FROM CodeFirstDatabase.Participant AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Topicality.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Topicality
        [CodeFirstDatabaseSchema.Topicality](T1.Topicality_ID, T1.Topicality_TripDescription)
    FROM (
        SELECT 
            T.ID AS Topicality_ID, 
            T.TripDescription AS Topicality_TripDescription, 
            True AS _from0
        FROM travelContext.Topicalities AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for travelContext.Topicalities.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Topicalities
        [travel_agency.DAL.Topicality](T1.Topicality_ID, T1.Topicality_TripDescription)
    FROM (
        SELECT 
            T.ID AS Topicality_ID, 
            T.TripDescription AS Topicality_TripDescription, 
            True AS _from0
        FROM CodeFirstDatabase.Topicality AS T
    ) AS T1");
        }
    }
}
